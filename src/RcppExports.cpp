// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// csample
arma::uvec csample(IntegerVector x, int size, bool replace, NumericVector prob);
RcppExport SEXP _fdtest_csample(SEXP xSEXP, SEXP sizeSEXP, SEXP replaceSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type replace(replaceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(csample(x, size, replace, prob));
    return rcpp_result_gen;
END_RCPP
}
// permhelper
arma::vec permhelper(arma::mat m, int select, int nperm);
RcppExport SEXP _fdtest_permhelper(SEXP mSEXP, SEXP selectSEXP, SEXP npermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type select(selectSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    rcpp_result_gen = Rcpp::wrap(permhelper(m, select, nperm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fdtest_csample", (DL_FUNC) &_fdtest_csample, 4},
    {"_fdtest_permhelper", (DL_FUNC) &_fdtest_permhelper, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_fdtest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
